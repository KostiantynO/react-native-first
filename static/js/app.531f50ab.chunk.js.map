{"version":3,"sources":["src/common/common.js","src/hooks/appReducer.js","src/helpers/loadFonts.js","src/components/Cat/Cat.js","src/App/App.styles.js","src/App/App.js","index.js","src/hooks/useLoadAssets.js","src/hooks/useKeyboard.js","src/assets/fonts/Roboto-Regular.ttf","src/assets/fonts/Roboto-Bold.ttf","src/assets/fonts/Zapfino.otf"],"names":["actions","Object","freeze","username","password","appIsReady","error","increment","decrement","keyboardStatus","stateNames","count","appReducer","state","type","payload","customFonts","require","Zapfino","Cat","Text","ClassCat","name","this","PureComponent","styles","StyleSheet","create","scrollView","backgroundColor","mainBgImage","position","top","right","bottom","left","zIndex","flex","resizeMode","container","Platform","select","ios","android","alignItems","justifyContent","paddingVertical","height","OS","title","marginTop","borderWidth","borderColor","borderRadius","color","textAlign","fontSize","fontWeight","input","width","padding","marginBottom","text","status","reactLogo","textMain","fontFamily","textBold","textCalligraphy","INITIAL_STATE","undefined","IMAGES","uri","registerRootComponent","useReducer","dispatch","useEffect","a","async","Font","console","warn","useLoadAssets","showSubscription","Keyboard","addListener","hideSubscription","remove","useKeyboard","Dimensions","get","log","TouchableWithoutFeedback","onPress","dismiss","View","ScrollView","contentContainerStyle","KeyboardAvoidingView","behavior","style","Image","source","TextInput","value","onChangeText","e","maxLength","placeholder","secureTextEntry","Button","Alert","alert","ImageBackground","module","exports"],"mappings":"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","file":"static/js/app.531f50ab.chunk.js","sourcesContent":["export const actions = Object.freeze({\n  username: 'name',\n  password: 'password',\n  appIsReady: 'appIsReady',\n  error: 'error',\n  increment: 'increment',\n  decrement: 'decrement',\n  keyboardStatus: 'keyboardStatus',\n  stateNames: { count: 'count' },\n});\n","import { actions } from 'src/common';\nconst {\n  increment,\n  decrement,\n  username,\n  password,\n  appIsReady,\n  error,\n  keyboardStatus,\n  stateNames: { count },\n} = actions;\n\nexport const appReducer = (state, { type, payload }) =>\n  ({\n    [appIsReady]: () => ({ ...state, [appIsReady]: payload }),\n    [password]: () => ({ ...state, [password]: payload }),\n    [username]: () => ({ ...state, [username]: payload }),\n    [increment]: () => ({ ...state, [count]: state[count] + payload }),\n    [decrement]: () => ({ ...state, [count]: state[count] - payload }),\n    [error]: () => ({ ...state, [error]: payload }),\n    [keyboardStatus]: () => ({ ...state, [keyboardStatus]: payload }),\n  }[type]());\n","import * as Font from 'expo-font';\n\nconst customFonts = {\n  'Roboto-Regular': require('src/assets/fonts/Roboto-Regular.ttf'),\n  'Roboto-Bold': require('src/assets/fonts/Roboto-Bold.ttf'),\n  Zapfino: require('src/assets/fonts/Zapfino.otf'),\n};\n\nexport const loadFonts = async () => {\n  await Font.loadAsync(customFonts);\n};\n","import { PureComponent } from 'react';\nimport { Text } from 'react-native';\n\nexport const Cat = () => {\n  const name = 'Maru';\n  return <Text>Hello, my name is {name}. I am your const catðŸ˜¼!</Text>;\n};\n\nexport class ClassCat extends PureComponent {\n  name = 'Maru';\n\n  render() {\n    return <Text>Hello, my name is {this.name}. I am your class catðŸ˜¼!</Text>;\n  }\n}\n","import { Platform, StyleSheet } from 'react-native';\n\nexport const styles = StyleSheet.create({\n  scrollView: {\n    backgroundColor: 'transparent',\n  },\n\n  mainBgImage: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    zIndex: -1,\n    flex: 1,\n    resizeMode: 'cover',\n  },\n\n  container: {\n    flex: 1,\n    ...Platform.select({\n      ios: {\n        backgroundColor: '#888888',\n      },\n      android: {\n        backgroundColor: '#eeeeee',\n      },\n    }),\n\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 36,\n  },\n\n  height: Platform.OS === 'ios' ? 50 : 100,\n\n  title: {\n    marginTop: 16,\n    paddingVertical: 8,\n    borderWidth: 4,\n    borderColor: '#20232a',\n    borderRadius: 150,\n    backgroundColor: '#61dafb',\n    color: '#20232a',\n    textAlign: 'center',\n    fontSize: 100,\n    fontWeight: 'bold',\n  },\n\n  input: {\n    width: 200,\n    fontSize: 21,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#000000',\n    marginBottom: 10,\n    borderRadius: 6,\n  },\n\n  text: {\n    fontSize: 30,\n  },\n\n  status: {\n    padding: 10,\n    textAlign: 'center',\n  },\n\n  reactLogo: { width: 250, height: 250 },\n\n  textMain: { fontFamily: 'Roboto-Regular', fontSize: 21 },\n  textBold: { fontFamily: 'Roboto-Bold', fontSize: 21 },\n  textCalligraphy: { fontFamily: 'Zapfino', fontSize: 50 },\n});\n","import {\n  useReducer,\n  // useRef\n} from 'react';\n\nimport {\n  TouchableWithoutFeedback,\n  View,\n  KeyboardAvoidingView,\n  Keyboard,\n  Platform,\n  TextInput,\n  Alert,\n  Button,\n  Text,\n  Image,\n  ImageBackground,\n  Dimensions,\n  ScrollView,\n} from 'react-native';\n\nimport { actions } from 'src/common';\nimport { appReducer, useKeyboard, useLoadAssets } from 'src/hooks';\nimport AppLoading from 'expo-app-loading';\nimport { Cat, ClassCat } from 'src/components';\nimport { styles } from './App.styles';\n\nconst INITIAL_STATE = Object.freeze({\n  name: '',\n  password: '',\n  appIsReady: false,\n  error: false,\n  count: 0,\n  keyboardStatus: undefined,\n});\n\nconst IMAGES = {\n  reactLogo: { uri: 'https://reactjs.org/logo-og.png' },\n  mainBgImage: { uri: 'https://reactjs.org/logo-og.png' },\n};\n\nexport const App = () => {\n  const [{ appIsReady, username, password, count, keyboardStatus }, dispatch] =\n    useReducer(appReducer, { ...INITIAL_STATE });\n  useLoadAssets(dispatch);\n  useKeyboard(dispatch);\n\n  if (!appIsReady) {\n    return <AppLoading />;\n  }\n\n  const onLogin = () => {\n    Alert.alert('Credentials', `${username} + ${password}`);\n  };\n\n  const { width, height } = Dimensions.get('window');\n  console.log('App ~ width', width);\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n      <View>\n        <ScrollView contentContainerStyle={styles.scrollView}>\n          <KeyboardAvoidingView\n            // behavior={Platform.OS == 'ios' ? 'padding' : 'height'}\n            behavior={Platform.OS == 'ios' && 'padding'}\n          >\n            <View style={styles.container}>\n              <Cat />\n              <ClassCat />\n              <Image source={IMAGES.reactLogo} style={styles.reactLogo} />\n              <Image source={IMAGES.reactLogo} style={styles.reactLogo} />\n              <Image source={IMAGES.reactLogo} style={styles.reactLogo} />\n\n              <Image source={IMAGES.reactLogo} style={styles.reactLogo} />\n\n              <Image source={IMAGES.reactLogo} style={styles.reactLogo} />\n\n              <TextInput\n                value={username}\n                onChangeText={e =>\n                  dispatch({ type: actions.username, payload: e })\n                }\n                maxLength={21}\n                placeholder=\"Username\"\n                style={styles.input}\n              />\n              <TextInput\n                value={password}\n                onChangeText={e =>\n                  dispatch({ type: actions.password, payload: e })\n                }\n                maxLength={30}\n                placeholder=\"Password\"\n                secureTextEntry\n                style={styles.input}\n              />\n              <Button title=\"Login\" style={styles.input} onPress={onLogin} />\n              <Button\n                title={`${count}`}\n                onPress={() =>\n                  dispatch({ type: actions.increment, payload: 1 })\n                }\n              />\n              <Button\n                title={`${count}`}\n                onPress={() =>\n                  dispatch({ type: actions.decrement, payload: 1 })\n                }\n              />\n              <Text>Platform Default</Text>\n\n              <Text style={styles.textMain}>Roboto-Regular</Text>\n              <Text style={styles.textBold}>Roboto-Bold</Text>\n              <Text style={styles.textCalligraphy}>\n                Hello World! I&apos;m Zapfino font\n              </Text>\n              <Text style={styles.status}>{keyboardStatus}</Text>\n            </View>\n          </KeyboardAvoidingView>\n        </ScrollView>\n        <ImageBackground\n          source={IMAGES.mainBgImage}\n          style={{ ...styles.mainBgImage, ...{ width, height } }}\n        />\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\n// const isfirstRender = useRef(true);\n// useEffect(() => {\n//   if (isfirstRender.current) {\n//     isfirstRender.current = false;\n//     return;\n//   }\n\n// }, []);\n","import { registerRootComponent } from 'expo';\nimport { App } from 'src/App';\nregisterRootComponent(App);\n","import { useEffect } from 'react';\nimport { loadFonts } from 'src/helpers';\nimport { actions } from 'src/common';\n\nexport const useLoadAssets = dispatch => {\n  useEffect(() => {\n    const cacheResourcesAsync = async () => {\n      try {\n        await loadFonts(); // Pre-load fonts\n      } catch (error) {\n        dispatch({ type: actions.error, payload: error });\n        console.warn(error);\n      } finally {\n        dispatch({ type: actions.appIsReady, payload: true });\n      }\n    };\n\n    cacheResourcesAsync();\n  }, [dispatch]);\n};\n","import { useEffect } from 'react';\nimport { Keyboard } from 'react-native';\nimport { actions } from 'src/common';\n\nexport const useKeyboard = dispatch => {\n  useEffect(() => {\n    const showSubscription = Keyboard.addListener('keyboardDidShow', () => {\n      dispatch({ type: actions.keyboardStatus, payload: 'Keyboard Shown' });\n    });\n\n    const hideSubscription = Keyboard.addListener('keyboardDidHide', () => {\n      dispatch({ type: actions.keyboardStatus, payload: 'Keyboard Hidden' });\n    });\n\n    return () => {\n      showSubscription.remove();\n      hideSubscription.remove();\n    };\n  }, [dispatch]);\n};\n","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Zapfino.otf\";"],"sourceRoot":""}