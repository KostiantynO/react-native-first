{"version":3,"sources":["src/assets/fonts/Roboto-Regular.ttf","src/assets/fonts/Roboto-Bold.ttf","src/assets/fonts/Zapfino.otf","src/assets/images/stars-on-night.jpg","src/common/common.js","src/common/theme.js","src/hooks/appReducer.js","src/helpers/loadFonts.js","src/hooks/useKeyboardShown.js","src/context/appContext.js","src/components/NavBar/NavBar.js","src/components/Cat/Cat.js","src/assets/images/images.js","src/components/My/My.styles.js","src/components/My/My.js","src/components/Tut/Tut.js","src/App/App.js","src/hooks/useLoadAssets.js","src/assets/images/logo-react.png"],"names":["module","exports","actions","Object","freeze","selected","username","password","appIsReady","error","increment","decrement","isKeyboardOpen","stateNames","my","tutorial","count","colors","primary","accent","aliceBlue","black","white","lightestGrey","lightGrey","green","red","lightPink","transparent","royalBlue","theme","dark","main","fg","bg","appReducer","state","type","payload","customFonts","require","Zapfino","appCtx","createContext","styles","StyleSheet","create","navBar","flexDirection","backgroundColor","paddingVertical","navBtn","paddingHorizontal","minWidth","NavBar","dispatch","useContext","View","style","Button","title","onPress","Cat","Text","propTypes","PropTypes","object","isRequired","name","this","PureComponent","IMAGES","reactLogo","mainBgImage","tutBgImage","MyCSS","cat","color","contentContainer","paddingTop","paddingBottom","position","top","right","bottom","left","zIndex","flex","resizeMode","container","alignItems","justifyContent","height","Platform","OS","marginTop","borderWidth","borderColor","borderRadius","textAlign","fontSize","fontWeight","placeholder","input","width","padding","marginBottom","status","logoContainer","text","textMain","fontFamily","textBold","textCalligraphy","css","My","keyboardStatus","onLogin","TouchableWithoutFeedback","Keyboard","dismiss","ScrollView","contentContainerStyle","KeyboardAvoidingView","behavior","Image","source","TextInput","value","onChangeText","maxLength","placeholderTextColor","secureTextEntry","textDefault","ImageBackground","innerBox","image","form","marginHorizontal","inputTitle","btn","select","ios","android","default","btnLabel","header","headerTitle","Tut","keyboardType","TouchableOpacity","activeOpacity","app","INITIAL_STATE","undefined","App","useReducer","useEffect","a","async","Font","console","warn","useLoadAssets","showSubscription","addListener","hideSubscription","remove","useKeyboardShown","Dimensions","get","isMy","isTut","appState","Alert","alert","iOS","Provider","registerRootComponent"],"mappings":"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","file":"static/js/app.658b77e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/Roboto-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Zapfino.otf\";","module.exports = __webpack_public_path__ + \"static/media/stars-on-night.d71538a9.jpg\";","export const actions = Object.freeze({\n  selected: 'selected',\n  username: 'username',\n  password: 'password',\n  appIsReady: 'appIsReady',\n  error: 'error',\n  increment: 'increment',\n  decrement: 'decrement',\n  isKeyboardOpen: 'isKeyboardOpen',\n  stateNames: {\n    my: 'my',\n    tutorial: 'tutorial',\n    count: 'count',\n  },\n});\n","const colors = Object.freeze({\n  primary: '#212121',\n  accent: '#2196f3',\n  aliceBlue: '#f0f8ff',\n  black: '#000000',\n  white: '#000000',\n  lightestGrey: '#eee',\n  lightGrey: 'lightgrey',\n  green: 'green',\n  red: 'red',\n  lightPink: '#ffb6c1',\n  transparent: 'transparent',\n  royalBlue: '#4169e1',\n});\n\nexport const theme = Object.freeze({\n  dark: {\n    main: { fg: colors.aliceBlue, bg: colors.primary },\n  },\n  // light: {main: {fg:, } },\n\n  colors,\n});\n","import { actions } from 'common';\n\nconst {\n  selected,\n  increment,\n  decrement,\n  username,\n  password,\n  appIsReady,\n  error,\n  isKeyboardOpen,\n  stateNames: { count },\n} = actions;\n\nexport const appReducer = (state, { type, payload }) =>\n  ({\n    [selected]: () => ({ ...state, [selected]: payload }),\n    [appIsReady]: () => ({ ...state, [appIsReady]: payload }),\n    [password]: () => ({ ...state, [password]: payload }),\n    [username]: () => ({ ...state, [username]: payload }),\n    [increment]: () => ({ ...state, [count]: state[count] + payload }),\n    [decrement]: () => ({ ...state, [count]: state[count] - payload }),\n    [error]: () => ({ ...state, [error]: payload }),\n    [isKeyboardOpen]: () => ({ ...state, [isKeyboardOpen]: payload }),\n  }[type]());\n","import * as Font from 'expo-font';\n\nconst customFonts = {\n  'Roboto-Regular': require('assets/fonts/Roboto-Regular.ttf'),\n  'Roboto-Bold': require('assets/fonts/Roboto-Bold.ttf'),\n  Zapfino: require('assets/fonts/Zapfino.otf'),\n};\n\nexport const loadFonts = async () => {\n  await Font.loadAsync(customFonts);\n};\n","import { actions } from 'common';\nimport { useEffect } from 'react';\nimport { Keyboard } from 'react-native';\n\nconst { isKeyboardOpen } = actions;\n\nexport const useKeyboardShown = dispatch => {\n  useEffect(() => {\n    const showSubscription = Keyboard.addListener('keyboardDidShow', () => {\n      dispatch({ type: isKeyboardOpen, payload: true });\n    });\n\n    const hideSubscription = Keyboard.addListener('keyboardDidHide', () => {\n      dispatch({ type: isKeyboardOpen, payload: false });\n    });\n\n    return () => {\n      showSubscription.remove();\n      hideSubscription.remove();\n    };\n  }, [dispatch]);\n};\n","import { createContext } from 'react';\n\nexport const appCtx = createContext();\n","import { useContext } from 'react';\nimport { StyleSheet, Button, View } from 'react-native';\nimport { appCtx } from 'context';\nimport { actions, theme } from 'common';\n\nconst styles = StyleSheet.create({\n  navBar: {\n    flexDirection: 'row',\n    backgroundColor: theme.dark.main.bg,\n    paddingVertical: 8,\n  },\n\n  navBtn: {\n    paddingHorizontal: 12,\n    minWidth: 100,\n  },\n});\n\nconst { selected, stateNames } = actions;\n\nexport const NavBar = () => {\n  const { dispatch } = useContext(appCtx);\n\n  return (\n    <View style={styles.navBar}>\n      <View style={styles.navBtn}>\n        <Button\n          title=\"My\"\n          onPress={() => dispatch({ type: selected, payload: stateNames.my })}\n        />\n      </View>\n\n      <View style={styles.navBtn}>\n        <Button\n          title=\"Tutorial\"\n          style={styles.navBtn}\n          onPress={() =>\n            dispatch({ type: selected, payload: stateNames.tutorial })\n          }\n        />\n      </View>\n    </View>\n  );\n};\n","import { PureComponent } from 'react';\nimport { Text } from 'react-native';\nimport PropTypes from 'prop-types';\n\nexport const Cat = ({ style }) => {\n  const name = 'Maru';\n  return (\n    <Text style={style}>Hello, my name is {name}. I am your const cat😼!</Text>\n  );\n};\n\nCat.propTypes = {\n  style: PropTypes.object.isRequired,\n};\n\nexport class ClassCat extends PureComponent {\n  name = 'Maru';\n\n  render() {\n    return <Text>Hello, my name is {this.name}. I am your class cat😼!</Text>;\n  }\n}\n","export const IMAGES = {\n  reactLogo: require('./logo-react.png'),\n  mainBgImage: require('./logo-react.png'),\n  tutBgImage: require('./stars-on-night.jpg'),\n};\n\n// reactLogo: { uri: 'https://reactjs.org/logo-og.png' },\n","import { Platform, StyleSheet } from 'react-native';\n\nexport const MyCSS = StyleSheet.create({\n  cat: {\n    color: '#eee',\n  },\n\n  contentContainer: {\n    backgroundColor: 'transparent',\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n\n  mainBgImage: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    zIndex: -1,\n    flex: 1,\n    resizeMode: 'cover',\n  },\n\n  container: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 36,\n  },\n\n  height: Platform.OS === 'ios' ? 50 : 100,\n\n  title: {\n    marginTop: 16,\n    paddingVertical: 8,\n    borderWidth: 4,\n    borderColor: '#20232a',\n    borderRadius: 150,\n    backgroundColor: '#61dafb',\n    color: '#20232a',\n    textAlign: 'center',\n    fontSize: 100,\n    fontWeight: 'bold',\n  },\n\n  placeholder: { color: 'green' },\n\n  input: {\n    width: 200,\n    fontSize: 21,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#000000',\n    marginBottom: 10,\n    borderRadius: 6,\n    color: '#aaa',\n    backgroundColor: '#212121',\n  },\n\n  status: {\n    padding: 10,\n    textAlign: 'center',\n  },\n\n  logoContainer: { padding: 20 },\n\n  text: { fontSize: 30 },\n\n  reactLogo: { width: 80, height: 80 },\n\n  textMain: {\n    fontFamily: 'Roboto-Regular',\n    fontSize: 21,\n    color: '#aaa',\n    backgroundColor: '#212121',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  textBold: {\n    fontFamily: 'Roboto-Bold',\n    fontSize: 21,\n    color: '#aaa',\n    backgroundColor: '#212121',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  textCalligraphy: {\n    fontFamily: 'Zapfino',\n    fontSize: 50,\n    color: '#aaa',\n    backgroundColor: '#212121',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n});\n","import { useContext } from 'react';\nimport {\n  TouchableWithoutFeedback,\n  View,\n  KeyboardAvoidingView,\n  Keyboard,\n  Platform,\n  TextInput,\n  Button,\n  Text,\n  Image,\n  ImageBackground,\n  ScrollView,\n} from 'react-native';\n\nimport { appCtx } from 'context';\nimport { actions } from 'common';\n\nimport { Cat } from '../Cat';\n\nimport { IMAGES } from 'assets/images';\nimport { MyCSS } from './My.styles';\n\nconst css = {\n  main: { fg: '#aaa' },\n};\n\nexport const My = () => {\n  const {\n    username,\n    password,\n    count,\n    keyboardStatus,\n    width,\n    height,\n    dispatch,\n    onLogin,\n  } = useContext(appCtx);\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n      <View>\n        <ScrollView contentContainerStyle={MyCSS.contentContainer}>\n          <KeyboardAvoidingView\n            // behavior={Platform.OS == 'ios' ? 'padding' : 'height'}\n            behavior={Platform.OS == 'ios' && 'padding'}\n          >\n            <View style={MyCSS.logoContainer}>\n              <Image source={IMAGES.reactLogo} style={MyCSS.reactLogo} />\n            </View>\n\n            <View style={MyCSS.container}>\n              <Cat style={MyCSS.cat} />\n\n              <TextInput\n                value={username}\n                onChangeText={text =>\n                  dispatch({ type: actions.username, payload: text })\n                }\n                maxLength={21}\n                placeholder=\"Username\"\n                style={MyCSS.input}\n                placeholderTextColor={css.main.fg}\n              />\n              <TextInput\n                value={password}\n                onChangeText={text =>\n                  dispatch({ type: actions.password, payload: text })\n                }\n                maxLength={30}\n                placeholder=\"Password\"\n                secureTextEntry\n                style={MyCSS.input}\n                placeholderTextColor={css.main.fg}\n              />\n              <Button title=\"Login\" style={MyCSS.input} onPress={onLogin} />\n              <Button\n                title={`${count}`}\n                onPress={() =>\n                  dispatch({ type: actions.increment, payload: 1 })\n                }\n              />\n              <Button\n                title={`${count}`}\n                onPress={() =>\n                  dispatch({ type: actions.decrement, payload: 1 })\n                }\n              />\n\n              <Text style={MyCSS.textDefault}>Platform Default</Text>\n              <Text style={MyCSS.textMain}>Roboto-Regular</Text>\n              <Text style={MyCSS.textBold}>Roboto-Bold</Text>\n              <Text style={MyCSS.textCalligraphy}>\n                Hello World! I&apos;m Zapfino font\n              </Text>\n              <Text style={MyCSS.status}>{keyboardStatus}</Text>\n            </View>\n          </KeyboardAvoidingView>\n        </ScrollView>\n        <ImageBackground\n          source={IMAGES.mainBgImage}\n          style={[MyCSS.mainBgImage, { width, height }]}\n        />\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n","import { useContext } from 'react';\nimport {\n  ImageBackground,\n  StyleSheet,\n  Text,\n  // Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Platform,\n  Keyboard,\n} from 'react-native';\n\nimport { theme } from 'common';\nimport { appCtx } from 'context';\nimport { IMAGES } from 'assets/images';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.dark.main.bg,\n  },\n\n  text: {\n    color: theme.colors.green,\n    fontSize: 30,\n  },\n  innerBox: {\n    borderWidth: 1,\n    borderColor: theme.colors.red,\n    padding: 40,\n    borderRadius: 10,\n    width: 300,\n  },\n\n  image: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'flex-end',\n    // alignItems: 'center',\n  },\n\n  input: {\n    borderWidth: 1,\n    borderColor: theme.dark.main.fg,\n    // marginHorizontal: 20,\n    borderRadius: 6,\n    color: theme.dark.main.fg,\n    paddingVertical: 4,\n    paddingHorizontal: 12,\n    fontSize: 21,\n  },\n  form: {\n    marginHorizontal: 20,\n  },\n  inputTitle: {\n    marginBottom: 10,\n    fontSize: 18,\n    color: theme.dark.main.fg,\n  },\n  btn: {\n    justifyContent: 'center',\n    alignItems: 'center',\n\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    marginTop: 40,\n    marginHorizontal: 20,\n\n    borderRadius: 6,\n    borderWidth: 1,\n\n    ...Platform.select({\n      ios: {\n        backgroundColor: theme.colors.transparent,\n        borderColor: theme.dark.main.fg,\n      },\n      android: {\n        backgroundColor: theme.colors.royalBlue,\n        borderColor: theme.colors.transparent,\n      },\n      default: {},\n    }),\n  },\n\n  btnLabel: {\n    fontSize: 21,\n    color: Platform.OS === 'ios' ? theme.colors.royalBlue : theme.dark.main.fg,\n  },\n  header: {\n    alignItems: 'center',\n    marginBottom: 0,\n  },\n  headerTitle: {\n    fontSize: 30,\n    color: theme.dark.main.fg,\n  },\n});\n\nexport const Tut = () => {\n  const { isKeyboardOpen } = useContext(appCtx);\n\n  const hideKeyboard = () => Keyboard.dismiss();\n\n  return (\n    <View style={styles.container}>\n      <ImageBackground source={IMAGES.tutBgImage} style={styles.image}>\n        <View\n          style={{\n            ...styles.form,\n            marginBottom: isKeyboardOpen ? 0 : 0,\n          }}\n        >\n          <View style={styles.header}>\n            <Text style={styles.headerTitle}>Hello again</Text>\n            <Text style={styles.headerTitle}>Welcome back</Text>\n          </View>\n\n          <View>\n            <Text style={styles.inputTitle}>\n              EMAIL ADDRESS {`${isKeyboardOpen}`}\n            </Text>\n\n            <TextInput\n              textAlign=\"center\"\n              keyboardType=\"email-address\"\n              style={styles.input}\n            />\n          </View>\n\n          <View style={{ marginTop: 20 }}>\n            <Text style={styles.inputTitle}>PASSWORD</Text>\n\n            <TextInput\n              secureTextEntry={true}\n              textAlign=\"center\"\n              style={styles.input}\n            />\n          </View>\n\n          <View>\n            <TouchableOpacity\n              activeOpacity={0.8}\n              style={styles.btn}\n              onPress={hideKeyboard}\n            >\n              <Text style={styles.btnLabel}>SIGN IN</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </ImageBackground>\n    </View>\n  );\n};\n","import { useReducer } from 'react';\nimport {\n  StyleSheet,\n  Alert,\n  Dimensions,\n  KeyboardAvoidingView,\n  Platform,\n} from 'react-native';\nimport { registerRootComponent } from 'expo';\nimport AppLoading from 'expo-app-loading';\nimport { appReducer, useKeyboardShown, useLoadAssets } from 'hooks';\nimport { actions, theme } from 'common';\nimport { appCtx } from 'context';\nimport { NavBar, My, Tut } from 'components';\n\nconst styles = StyleSheet.create({\n  app: {\n    flex: 1,\n    paddingTop: 40,\n    backgroundColor: theme.dark.main.bg,\n  },\n});\n\nconst {\n  stateNames,\n  selected,\n  username,\n  password,\n  appIsReady,\n  error,\n  keyboardStatus,\n} = actions;\n\nconst INITIAL_STATE = Object.freeze({\n  [selected]: stateNames.tutorial,\n  [username]: '',\n  [password]: '',\n  [appIsReady]: false,\n  [error]: false,\n  [stateNames.count]: 0,\n  [keyboardStatus]: undefined,\n});\n\nexport const App = () => {\n  const [state, dispatch] = useReducer(appReducer, { ...INITIAL_STATE });\n  useLoadAssets(dispatch);\n  useKeyboardShown(dispatch);\n\n  if (!state.appIsReady) return <AppLoading />;\n\n  const onLogin = () =>\n    Alert.alert(\n      'Credentials',\n      state.username && state.password\n        ? `${state.username} + ${state.password}`\n        : 'Please enter email and password'\n    );\n\n  const { width, height } = Dimensions.get('window');\n  const isMy = state.selected && state.selected === stateNames.my;\n  const isTut = state.selected && state.selected === stateNames.tutorial;\n\n  const appState = { ...state, dispatch, width, height, onLogin };\n\n  const iOS = Platform.OS === 'ios' ? 'padding' : '';\n\n  return (\n    <KeyboardAvoidingView style={styles.app} behavior={iOS}>\n      <appCtx.Provider value={appState}>\n        <NavBar />\n        {isMy && <My />}\n        {isTut && <Tut />}\n      </appCtx.Provider>\n    </KeyboardAvoidingView>\n  );\n};\n\nregisterRootComponent(App);\n","import { useEffect } from 'react';\nimport { loadFonts } from 'helpers';\nimport { actions } from 'common';\n\nexport const useLoadAssets = dispatch => {\n  useEffect(() => {\n    const cacheResourcesAsync = async () => {\n      try {\n        await loadFonts(); // Pre-load fonts\n      } catch (error) {\n        dispatch({ type: actions.error, payload: error });\n        console.warn(error);\n      } finally {\n        dispatch({ type: actions.appIsReady, payload: true });\n      }\n    };\n\n    cacheResourcesAsync();\n  }, [dispatch]);\n};\n","module.exports = __webpack_public_path__ + \"static/media/logo-react.ef20e673.png\";"],"sourceRoot":""}