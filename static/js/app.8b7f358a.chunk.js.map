{"version":3,"sources":["src/assets/fonts/Roboto-Regular.ttf","src/assets/fonts/Roboto-Bold.ttf","src/assets/fonts/Zapfino.otf","src/assets/images/stars-on-night.jpg","src/common/common.js","src/common/theme.js","src/hooks/appReducer.js","src/helpers/loadFonts.js","src/context/appContext.js","src/components/NavBar/NavBar.js","src/components/Cat/Cat.js","src/assets/images/index.js","src/components/My/My.styles.js","src/components/My/My.js","src/components/Tut/Tut.js","src/App/App.js","src/hooks/useLoadAssets.js","src/hooks/useKeyboard.js"],"names":["module","exports","actions","Object","freeze","selected","username","password","appIsReady","error","increment","decrement","keyboardStatus","stateNames","my","tutorial","count","theme","dark","main","fg","bg","appReducer","state","type","payload","customFonts","require","Zapfino","appCtx","createContext","styles","StyleSheet","create","minimumContainer","paddingVertical","navBar","flexDirection","backgroundColor","navBtn","paddingHorizontal","NavBar","dispatch","useContext","View","style","Button","title","onPress","Cat","Text","propTypes","PropTypes","object","isRequired","ClassCat","name","this","PureComponent","IMAGES","reactLogo","uri","mainBgImage","tutBgImage","MyCSS","cat","color","contentContainer","paddingTop","paddingBottom","position","top","right","bottom","left","zIndex","flex","resizeMode","container","alignItems","justifyContent","height","Platform","OS","marginTop","borderWidth","borderColor","borderRadius","textAlign","fontSize","fontWeight","placeholder","input","width","padding","marginBottom","status","logoContainer","text","textMain","fontFamily","textBold","textCalligraphy","css","My","onLogin","TouchableWithoutFeedback","Keyboard","dismiss","ScrollView","contentContainerStyle","KeyboardAvoidingView","behavior","Image","source","TextInput","value","onChangeText","maxLength","placeholderTextColor","secureTextEntry","textDefault","ImageBackground","tutCSS","innerBox","imageBackground","marginHorizontal","Tut","AppStyles","INITIAL_STATE","undefined","App","useReducer","useEffect","a","async","Font","console","warn","useLoadAssets","showSubscription","addListener","hideSubscription","remove","useKeyboard","Dimensions","get","isMy","isTut","appState","Alert","alert","Provider","registerRootComponent"],"mappings":"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","file":"static/js/app.8b7f358a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/Roboto-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Zapfino.otf\";","module.exports = __webpack_public_path__ + \"static/media/stars-on-night.d71538a9.jpg\";","export const actions = Object.freeze({\n  selected: 'selected',\n  username: 'username',\n  password: 'password',\n  appIsReady: 'appIsReady',\n  error: 'error',\n  increment: 'increment',\n  decrement: 'decrement',\n  keyboardStatus: 'keyboardStatus',\n  stateNames: {\n    my: 'my',\n    tutorial: 'tutorial',\n    count: 'count',\n  },\n});\n","export const theme = Object.freeze({\n  dark: {\n    main: { fg: '#f0f8ff', bg: '#212121' },\n  },\n  // light: {main: {fg:, } },\n});\n","import { actions } from 'common';\n\nconst {\n  selected,\n  increment,\n  decrement,\n  username,\n  password,\n  appIsReady,\n  error,\n  keyboardStatus,\n  stateNames: { count },\n} = actions;\n\nexport const appReducer = (state, { type, payload }) =>\n  ({\n    [selected]: () => ({ ...state, [selected]: payload }),\n    [appIsReady]: () => ({ ...state, [appIsReady]: payload }),\n    [password]: () => ({ ...state, [password]: payload }),\n    [username]: () => ({ ...state, [username]: payload }),\n    [increment]: () => ({ ...state, [count]: state[count] + payload }),\n    [decrement]: () => ({ ...state, [count]: state[count] - payload }),\n    [error]: () => ({ ...state, [error]: payload }),\n    [keyboardStatus]: () => ({ ...state, [keyboardStatus]: payload }),\n  }[type]());\n","import * as Font from 'expo-font';\n\nconst customFonts = {\n  'Roboto-Regular': require('assets/fonts/Roboto-Regular.ttf'),\n  'Roboto-Bold': require('assets/fonts/Roboto-Bold.ttf'),\n  Zapfino: require('assets/fonts/Zapfino.otf'),\n};\n\nexport const loadFonts = async () => {\n  await Font.loadAsync(customFonts);\n};\n","import { createContext } from 'react';\n\nexport const appCtx = createContext();\n","import { useContext } from 'react';\nimport { StyleSheet, Button, View } from 'react-native';\nimport { appCtx } from 'context';\nimport { actions, theme } from 'common';\n\nconst styles = StyleSheet.create({\n  minimumContainer: {\n    paddingVertical: 36,\n  },\n  navBar: {\n    flexDirection: 'row',\n    backgroundColor: theme.dark.main.bg,\n  },\n\n  navBtn: {\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n  },\n});\n\nconst { selected, stateNames } = actions;\n\nexport const NavBar = () => {\n  const { dispatch } = useContext(appCtx);\n\n  return (\n    <View style={styles.navBar}>\n      <View style={styles.navBtn}>\n        <Button\n          title=\"My\"\n          onPress={() => dispatch({ type: selected, payload: stateNames.my })}\n        />\n      </View>\n\n      <View style={styles.navBtn}>\n        <Button\n          title=\"Tutorial\"\n          style={styles.navBtn}\n          onPress={() =>\n            dispatch({ type: selected, payload: stateNames.tutorial })\n          }\n        />\n      </View>\n    </View>\n  );\n};\n","import { PureComponent } from 'react';\nimport { Text } from 'react-native';\nimport PropTypes from 'prop-types';\n\nexport const Cat = ({ style }) => {\n  const name = 'Maru';\n  return (\n    <Text style={style}>Hello, my name is {name}. I am your const cat😼!</Text>\n  );\n};\n\nCat.propTypes = {\n  style: PropTypes.object.isRequired,\n};\n\nexport class ClassCat extends PureComponent {\n  name = 'Maru';\n\n  render() {\n    return <Text>Hello, my name is {this.name}. I am your class cat😼!</Text>;\n  }\n}\n","export const IMAGES = {\n  reactLogo: { uri: 'https://reactjs.org/logo-og.png' },\n  mainBgImage: { uri: 'https://reactjs.org/logo-og.png' },\n  tutBgImage: require('assets/images/stars-on-night.jpg'),\n};\n","import { Platform, StyleSheet } from 'react-native';\n\nexport const MyCSS = StyleSheet.create({\n  cat: {\n    color: '#eee',\n  },\n\n  contentContainer: {\n    backgroundColor: 'transparent',\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n\n  mainBgImage: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    zIndex: -1,\n    flex: 1,\n    resizeMode: 'cover',\n  },\n\n  container: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 36,\n  },\n\n  height: Platform.OS === 'ios' ? 50 : 100,\n\n  title: {\n    marginTop: 16,\n    paddingVertical: 8,\n    borderWidth: 4,\n    borderColor: '#20232a',\n    borderRadius: 150,\n    backgroundColor: '#61dafb',\n    color: '#20232a',\n    textAlign: 'center',\n    fontSize: 100,\n    fontWeight: 'bold',\n  },\n\n  placeholder: { color: 'green' },\n\n  input: {\n    width: 200,\n    fontSize: 21,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#000000',\n    marginBottom: 10,\n    borderRadius: 6,\n    color: '#aaa',\n    backgroundColor: '#212121',\n  },\n\n  status: {\n    padding: 10,\n    textAlign: 'center',\n  },\n\n  logoContainer: { padding: 20 },\n\n  text: { fontSize: 30 },\n\n  reactLogo: { width: 80, height: 80 },\n\n  textMain: {\n    fontFamily: 'Roboto-Regular',\n    fontSize: 21,\n    color: '#aaa',\n    backgroundColor: '#212121',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  textBold: {\n    fontFamily: 'Roboto-Bold',\n    fontSize: 21,\n    color: '#aaa',\n    backgroundColor: '#212121',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  textCalligraphy: {\n    fontFamily: 'Zapfino',\n    fontSize: 50,\n    color: '#aaa',\n    backgroundColor: '#212121',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n});\n","import { useContext } from 'react';\nimport {\n  TouchableWithoutFeedback,\n  View,\n  KeyboardAvoidingView,\n  Keyboard,\n  Platform,\n  TextInput,\n  Button,\n  Text,\n  Image,\n  ImageBackground,\n  ScrollView,\n} from 'react-native';\n\nimport { appCtx } from 'context';\nimport { actions } from 'common';\n\nimport { Cat } from '../Cat';\n\nimport { IMAGES } from 'assets/images';\nimport { MyCSS } from './My.styles';\n\nconst css = {\n  main: { fg: '#aaa' },\n};\n\nexport const My = () => {\n  const {\n    username,\n    password,\n    count,\n    keyboardStatus,\n    width,\n    height,\n    dispatch,\n    onLogin,\n  } = useContext(appCtx);\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n      <View>\n        <ScrollView contentContainerStyle={MyCSS.contentContainer}>\n          <KeyboardAvoidingView\n            // behavior={Platform.OS == 'ios' ? 'padding' : 'height'}\n            behavior={Platform.OS == 'ios' && 'padding'}\n          >\n            <View style={MyCSS.logoContainer}>\n              <Image source={IMAGES.reactLogo} style={MyCSS.reactLogo} />\n            </View>\n\n            <View style={MyCSS.container}>\n              <Cat style={MyCSS.cat} />\n\n              <TextInput\n                value={username}\n                onChangeText={text =>\n                  dispatch({ type: actions.username, payload: text })\n                }\n                maxLength={21}\n                placeholder=\"Username\"\n                style={MyCSS.input}\n                placeholderTextColor={css.main.fg}\n              />\n              <TextInput\n                value={password}\n                onChangeText={text =>\n                  dispatch({ type: actions.password, payload: text })\n                }\n                maxLength={30}\n                placeholder=\"Password\"\n                secureTextEntry\n                style={MyCSS.input}\n                placeholderTextColor={css.main.fg}\n              />\n              <Button title=\"Login\" style={MyCSS.input} onPress={onLogin} />\n              <Button\n                title={`${count}`}\n                onPress={() =>\n                  dispatch({ type: actions.increment, payload: 1 })\n                }\n              />\n              <Button\n                title={`${count}`}\n                onPress={() =>\n                  dispatch({ type: actions.decrement, payload: 1 })\n                }\n              />\n\n              <Text style={MyCSS.textDefault}>Platform Default</Text>\n              <Text style={MyCSS.textMain}>Roboto-Regular</Text>\n              <Text style={MyCSS.textBold}>Roboto-Bold</Text>\n              <Text style={MyCSS.textCalligraphy}>\n                Hello World! I&apos;m Zapfino font\n              </Text>\n              <Text style={MyCSS.status}>{keyboardStatus}</Text>\n            </View>\n          </KeyboardAvoidingView>\n        </ScrollView>\n        <ImageBackground\n          source={IMAGES.mainBgImage}\n          style={[MyCSS.mainBgImage, { width, height }]}\n        />\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n","import {\n  View,\n  ScrollView,\n  ImageBackground,\n  Text,\n  // Platform,\n  StyleSheet,\n  TextInput,\n} from 'react-native';\n\nimport { ClassCat } from '../Cat';\nimport { IMAGES } from 'assets/images';\nimport { theme } from 'common/theme';\n\nconst tutCSS = StyleSheet.create({\n  container: {\n    // flex: 1,\n    backgroundColor: theme.dark.main.bg,\n\n    // ...Platform.select({\n    //   ios: { backgroundColor: '#888888' },\n    //   android: { backgroundColor: '#eeeeee' },\n    // }),\n  },\n\n  text: {\n    fontSize: 30,\n    color: 'green',\n  },\n\n  innerBox: {\n    width: 300,\n    padding: 40,\n    marginTop: 400,\n    borderRadius: 6,\n    borderWidth: 2,\n    borderColor: 'green',\n  },\n\n  imageBackground: {\n    flex: 1,\n    resizeMode: 'cover',\n    // justifyContent: 'center',\n    // alignItems: 'center',\n    paddingHorizontal: 16,\n  },\n\n  input: {\n    borderWidth: 1,\n    borderColor: theme.dark.main.fg,\n    height: 40,\n    borderRadius: 6,\n    marginHorizontal: 40,\n    color: theme.dark.main.fg,\n    textAlign: 'center',\n  },\n});\n\nexport const Tut = () => {\n  return (\n    <ScrollView contentContainerStyle={tutCSS.container}>\n      <ImageBackground\n        style={tutCSS.imageBackground}\n        source={IMAGES.tutBgImage}\n      >\n        <View>\n          <ClassCat />\n        </View>\n\n        <TextInput style={tutCSS.input} />\n\n        <View style={tutCSS.innerBox}>\n          <Text style={tutCSS.text}>{'Hurd work :)'}</Text>\n        </View>\n      </ImageBackground>\n    </ScrollView>\n  );\n};\n","import {\n  useReducer,\n  // useRef\n} from 'react';\n\nimport { StyleSheet, View, Alert, Dimensions } from 'react-native';\nimport { registerRootComponent } from 'expo';\nimport AppLoading from 'expo-app-loading';\n\nimport { appReducer, useKeyboard, useLoadAssets } from 'hooks';\nimport { actions } from 'common';\n\nimport { appCtx } from 'context';\nimport { NavBar, My, Tut } from 'components';\n\nconst AppStyles = StyleSheet.create({\n  minimumContainer: {\n    paddingVertical: 36,\n  },\n});\n\nconst { stateNames } = actions;\n\nconst INITIAL_STATE = Object.freeze({\n  selected: stateNames.my,\n  name: '',\n  password: '',\n  appIsReady: false,\n  error: false,\n  count: 0,\n  keyboardStatus: undefined,\n});\n\nexport const App = () => {\n  const [state, dispatch] = useReducer(appReducer, { ...INITIAL_STATE });\n  useLoadAssets(dispatch);\n  useKeyboard(dispatch);\n\n  if (!state.appIsReady) return <AppLoading />;\n\n  const onLogin = () =>\n    Alert.alert('Credentials', `${state.username} + ${state.password}`);\n\n  const { width, height } = Dimensions.get('window');\n  const isMy = state.selected && state.selected === stateNames.my;\n  const isTut = state.selected && state.selected === stateNames.tutorial;\n\n  const appState = { ...state, dispatch, width, height, onLogin };\n\n  return (\n    <appCtx.Provider value={appState}>\n      <View style={AppStyles.minimumContainer}>\n        <NavBar />\n        {isMy && <My />}\n        {isTut && <Tut />}\n      </View>\n    </appCtx.Provider>\n  );\n};\n\nregisterRootComponent(App);\n","import { useEffect } from 'react';\nimport { loadFonts } from 'helpers';\nimport { actions } from 'common';\n\nexport const useLoadAssets = dispatch => {\n  useEffect(() => {\n    const cacheResourcesAsync = async () => {\n      try {\n        await loadFonts(); // Pre-load fonts\n      } catch (error) {\n        dispatch({ type: actions.error, payload: error });\n        console.warn(error);\n      } finally {\n        dispatch({ type: actions.appIsReady, payload: true });\n      }\n    };\n\n    cacheResourcesAsync();\n  }, [dispatch]);\n};\n","import { useEffect } from 'react';\nimport { Keyboard } from 'react-native';\nimport { actions } from 'common';\n\nexport const useKeyboard = dispatch => {\n  useEffect(() => {\n    const showSubscription = Keyboard.addListener('keyboardDidShow', () => {\n      dispatch({ type: actions.keyboardStatus, payload: 'Keyboard Shown' });\n    });\n\n    const hideSubscription = Keyboard.addListener('keyboardDidHide', () => {\n      dispatch({ type: actions.keyboardStatus, payload: 'Keyboard Hidden' });\n    });\n\n    return () => {\n      showSubscription.remove();\n      hideSubscription.remove();\n    };\n  }, [dispatch]);\n};\n"],"sourceRoot":""}