{"version":3,"sources":["src/assets/fonts/Roboto-Regular.ttf","src/assets/fonts/Roboto-Bold.ttf","src/assets/fonts/Zapfino.otf","src/assets/images/stars-on-night.jpg","src/common/common.js","src/common/theme.js","src/hooks/appReducer.js","src/helpers/loadFonts.js","src/hooks/useKeyboardShown.js","src/context/appContext.js","src/components/NavBar/NavBar.js","src/components/Cat/Cat.js","src/assets/images/images.js","src/components/My/My.styles.js","src/components/My/My.js","src/components/Tut/Tut.js","src/App/App.js","src/hooks/useLoadAssets.js","src/assets/images/logo-react.png"],"names":["module","exports","actions","Object","freeze","selected","username","password","appIsReady","error","increment","decrement","isKeyboardOpen","stateNames","my","tutorial","count","colors","primary","accent","aliceBlue","black","white","lightestGrey","lighterGrey","lightGrey","darkerGray","green","red","lightPink","transparent","royalBlue","fonts","roboto","regular","bold","zapfino","theme","dark","main","fg","bg","appReducer","state","type","payload","customFonts","require","Zapfino","appCtx","createContext","styles","StyleSheet","create","navBar","flexDirection","backgroundColor","paddingVertical","navBtn","paddingHorizontal","minWidth","NavBar","dispatch","useContext","View","style","Button","title","onPress","Cat","Text","propTypes","PropTypes","object","isRequired","name","this","PureComponent","IMAGES","reactLogo","mainBgImage","tutBgImage","css","cat","color","contentContainer","paddingTop","paddingBottom","position","top","right","bottom","left","zIndex","flex","resizeMode","container","alignItems","justifyContent","marginTop","borderWidth","borderColor","borderRadius","textAlign","fontSize","fontWeight","input","width","padding","marginBottom","status","logoContainer","height","text","textMain","fontFamily","textBold","textCalligraphy","My","keyboardStatus","onLogin","TouchableWithoutFeedback","Keyboard","dismiss","ScrollView","contentContainerStyle","Image","source","TextInput","value","onChangeText","maxLength","placeholder","placeholderTextColor","secureTextEntry","ImageBackground","innerBox","image","form","marginHorizontal","inputTitle","btn","Platform","select","ios","android","default","btnLabel","OS","header","headerTitle","Tut","useState","setUsername","setPassword","hideKeyboard","keyboardType","TouchableOpacity","activeOpacity","app","INITIAL_STATE","App","useReducer","useEffect","a","async","Font","console","warn","useLoadAssets","showSubscription","addListener","hideSubscription","remove","useKeyboardShown","Dimensions","get","isMy","isTut","appState","Alert","alert","iOS","KeyboardAvoidingView","behavior","Provider","registerRootComponent"],"mappings":"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","file":"static/js/app.9dae2a6f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"./fonts/Roboto-Regular.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Roboto-Bold.ttf\";","module.exports = __webpack_public_path__ + \"./fonts/Zapfino.otf\";","module.exports = __webpack_public_path__ + \"static/media/stars-on-night.d71538a9.jpg\";","export const actions = Object.freeze({\n  selected: 'selected',\n  username: 'username',\n  password: 'password',\n  appIsReady: 'appIsReady',\n  error: 'error',\n  increment: 'increment',\n  decrement: 'decrement',\n  isKeyboardOpen: 'isKeyboardOpen',\n  stateNames: {\n    my: 'my',\n    tutorial: 'tutorial',\n    count: 'count',\n  },\n});\n","const colors = Object.freeze({\n  primary: '#212121',\n  accent: '#2196f3',\n  aliceBlue: '#f0f8ff',\n  black: '#000000',\n  white: '#000000',\n  lightestGrey: '#eee',\n  lighterGrey: '#aaa',\n  lightGrey: 'lightgrey',\n  darkerGray: '#61dafb',\n  green: '#00ff00',\n  red: '#ff0000',\n  lightPink: '#ffb6c1',\n  transparent: 'transparent',\n  royalBlue: '#4169e1',\n});\n\nconst fonts = Object.freeze({\n  roboto: { regular: 'Roboto-Regular', bold: 'Roboto-Bold' },\n  zapfino: 'Zapfino',\n});\n\nexport const theme = Object.freeze({\n  dark: {\n    main: { fg: colors.aliceBlue, bg: colors.primary },\n  },\n  // light: {main: {fg:, } },\n\n  fonts,\n  colors,\n});\n","import { actions } from 'common';\n\nconst {\n  selected,\n  increment,\n  decrement,\n  username,\n  password,\n  appIsReady,\n  error,\n  isKeyboardOpen,\n  stateNames: { count },\n} = actions;\n\nexport const appReducer = (state, { type, payload }) =>\n  ({\n    [selected]: () => ({ ...state, [selected]: payload }),\n    [appIsReady]: () => ({ ...state, [appIsReady]: payload }),\n    [password]: () => ({ ...state, [password]: payload }),\n    [username]: () => ({ ...state, [username]: payload }),\n    [increment]: () => ({ ...state, [count]: state[count] + payload }),\n    [decrement]: () => ({ ...state, [count]: state[count] - payload }),\n    [error]: () => ({ ...state, [error]: payload }),\n    [isKeyboardOpen]: () => ({ ...state, [isKeyboardOpen]: payload }),\n  }[type]());\n","import * as Font from 'expo-font';\n\nconst customFonts = {\n  'Roboto-Regular': require('assets/fonts/Roboto-Regular.ttf'),\n  'Roboto-Bold': require('assets/fonts/Roboto-Bold.ttf'),\n  Zapfino: require('assets/fonts/Zapfino.otf'),\n};\n\nexport const loadFonts = async () => {\n  await Font.loadAsync(customFonts);\n};\n","import { actions } from 'common';\nimport { useEffect } from 'react';\nimport { Keyboard } from 'react-native';\n\nconst { isKeyboardOpen } = actions;\n\nexport const useKeyboardShown = dispatch => {\n  useEffect(() => {\n    const showSubscription = Keyboard.addListener('keyboardDidShow', () => {\n      dispatch({ type: isKeyboardOpen, payload: true });\n    });\n\n    const hideSubscription = Keyboard.addListener('keyboardDidHide', () => {\n      dispatch({ type: isKeyboardOpen, payload: false });\n    });\n\n    return () => {\n      showSubscription.remove();\n      hideSubscription.remove();\n    };\n  }, [dispatch]);\n};\n","import { createContext } from 'react';\n\nexport const appCtx = createContext();\n","import { useContext } from 'react';\nimport { StyleSheet, Button, View } from 'react-native';\nimport { appCtx } from 'context';\nimport { actions, theme } from 'common';\n\nconst styles = StyleSheet.create({\n  navBar: {\n    flexDirection: 'row',\n    backgroundColor: theme.dark.main.bg,\n    paddingVertical: 8,\n  },\n\n  navBtn: {\n    paddingHorizontal: 12,\n    minWidth: 100,\n  },\n});\n\nconst { selected, stateNames } = actions;\n\nexport const NavBar = () => {\n  const { dispatch } = useContext(appCtx);\n\n  return (\n    <View style={styles.navBar}>\n      <View style={styles.navBtn}>\n        <Button\n          title=\"My\"\n          onPress={() => dispatch({ type: selected, payload: stateNames.my })}\n        />\n      </View>\n\n      <View style={styles.navBtn}>\n        <Button\n          title=\"Tutorial\"\n          style={styles.navBtn}\n          onPress={() =>\n            dispatch({ type: selected, payload: stateNames.tutorial })\n          }\n        />\n      </View>\n    </View>\n  );\n};\n","import { PureComponent } from 'react';\nimport { Text } from 'react-native';\nimport PropTypes from 'prop-types';\n\nexport const Cat = ({ style }) => {\n  const name = 'Maru';\n  return (\n    <Text style={style}>Hello, my name is {name}. I am your const cat😼!</Text>\n  );\n};\n\nCat.propTypes = {\n  style: PropTypes.object.isRequired,\n};\n\nexport class ClassCat extends PureComponent {\n  name = 'Maru';\n\n  render() {\n    return <Text>Hello, my name is {this.name}. I am your class cat😼!</Text>;\n  }\n}\n","export const IMAGES = {\n  reactLogo: require('./logo-react.png'),\n  mainBgImage: require('./logo-react.png'),\n  tutBgImage: require('./stars-on-night.jpg'),\n};\n\n// reactLogo: { uri: 'https://reactjs.org/logo-og.png' },\n","import { theme } from 'common';\nimport { StyleSheet } from 'react-native';\n\nexport const css = StyleSheet.create({\n  cat: {\n    color: '#eee',\n  },\n\n  contentContainer: {\n    backgroundColor: 'transparent',\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n\n  mainBgImage: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    zIndex: -1,\n    flex: 1,\n    resizeMode: 'cover',\n  },\n\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.transparent,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 36,\n  },\n\n  title: {\n    marginTop: 16,\n    paddingVertical: 8,\n    borderWidth: 4,\n    borderColor: theme.dark.main.bg,\n    borderRadius: 150,\n    backgroundColor: theme.colors.darkerGray,\n    color: theme.dark.main.bg,\n    textAlign: 'center',\n    fontSize: 100,\n    fontWeight: 'bold',\n  },\n\n  input: {\n    width: 200,\n    fontSize: 21,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: theme.colors.black,\n    marginBottom: 10,\n    borderRadius: 6,\n    color: theme.dark.main.fg,\n    backgroundColor: theme.dark.main.bg,\n  },\n\n  status: {\n    padding: 10,\n    textAlign: 'center',\n  },\n\n  logoContainer: { padding: 20 },\n\n  reactLogo: { width: 80, height: 80 },\n\n  text: { fontSize: 30 },\n  // textDefault: {\n  //   fontSize: 30,\n  //   color: theme.dark.main.fg,\n  // },\n  textMain: {\n    fontFamily: theme.fonts.roboto.regular,\n    fontSize: 21,\n    color: theme.dark.main.fg,\n    backgroundColor: theme.dark.main.bg,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  textBold: {\n    fontFamily: theme.fonts.roboto.bold,\n    fontSize: 21,\n    color: theme.dark.main.fg,\n    backgroundColor: theme.dark.main.bg,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  textCalligraphy: {\n    fontFamily: theme.fonts.zapfino,\n    fontSize: 50,\n    color: theme.dark.main.fg,\n    backgroundColor: theme.dark.main.bg,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n});\n","import { useContext } from 'react';\nimport {\n  TouchableWithoutFeedback,\n  View,\n  Keyboard,\n  TextInput,\n  Button,\n  Text,\n  Image,\n  ImageBackground,\n  ScrollView,\n} from 'react-native';\n\nimport { appCtx } from 'context';\nimport { actions, theme } from 'common';\n\nimport { Cat } from '../Cat';\n\nimport { IMAGES } from 'assets/images';\nimport { css } from './My.styles';\n\nexport const My = () => {\n  const {\n    username,\n    password,\n    count,\n    keyboardStatus,\n    width,\n    height,\n    dispatch,\n    onLogin,\n  } = useContext(appCtx);\n\n  return (\n    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n      <View>\n        <ScrollView contentContainerStyle={css.contentContainer}>\n          <View style={css.logoContainer}>\n            <Image source={IMAGES.reactLogo} style={css.reactLogo} />\n          </View>\n\n          <View style={css.container}>\n            <Cat style={css.cat} />\n\n            <TextInput\n              value={username}\n              onChangeText={text =>\n                dispatch({ type: actions.username, payload: text })\n              }\n              maxLength={21}\n              placeholder=\"Username\"\n              style={css.input}\n              placeholderTextColor={theme.dark.main.fg}\n            />\n\n            <TextInput\n              value={password}\n              onChangeText={text =>\n                dispatch({ type: actions.password, payload: text })\n              }\n              maxLength={30}\n              placeholder=\"Password\"\n              secureTextEntry\n              style={css.input}\n              placeholderTextColor={theme.dark.main.fg}\n            />\n\n            <View>\n              <Button title=\"Login\" onPress={onLogin} />\n            </View>\n\n            <Button\n              title={`${count}`}\n              onPress={() => dispatch({ type: actions.increment, payload: 1 })}\n            />\n\n            <Button\n              title={`${count}`}\n              onPress={() => dispatch({ type: actions.decrement, payload: 1 })}\n            />\n\n            <Text>Platform Default</Text>\n            <Text style={css.textMain}>Roboto-Regular</Text>\n            <Text style={css.textBold}>Roboto-Bold</Text>\n            <Text style={css.textCalligraphy}>\n              Hello World! I&apos;m Zapfino font\n            </Text>\n            <Text style={css.status}>{keyboardStatus}</Text>\n          </View>\n        </ScrollView>\n        <ImageBackground\n          source={IMAGES.mainBgImage}\n          style={[css.mainBgImage, { width, height }]}\n        />\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n","import { useContext, useState } from 'react';\nimport {\n  ImageBackground,\n  StyleSheet,\n  Text,\n  // Text,\n  TextInput,\n  View,\n  TouchableOpacity,\n  Platform,\n  Keyboard,\n  TouchableWithoutFeedback,\n} from 'react-native';\n\nimport { actions, theme } from 'common';\nimport { appCtx } from 'context';\nimport { IMAGES } from 'assets/images';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.dark.main.bg,\n  },\n\n  text: {\n    color: theme.colors.green,\n    fontSize: 30,\n  },\n  innerBox: {\n    borderWidth: 1,\n    borderColor: theme.colors.red,\n    padding: 40,\n    borderRadius: 10,\n    width: 300,\n  },\n\n  image: {\n    flex: 1,\n    resizeMode: 'cover',\n    justifyContent: 'flex-end',\n    // alignItems: 'center',\n  },\n\n  input: {\n    borderWidth: 1,\n    borderColor: theme.dark.main.fg,\n    // marginHorizontal: 20,\n    borderRadius: 6,\n    color: theme.dark.main.fg,\n    paddingVertical: 4,\n    paddingHorizontal: 12,\n    fontSize: 21,\n  },\n  form: {\n    marginHorizontal: 20,\n  },\n  inputTitle: {\n    marginBottom: 10,\n    fontSize: 18,\n    color: theme.dark.main.fg,\n  },\n  btn: {\n    justifyContent: 'center',\n    alignItems: 'center',\n\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    marginTop: 40,\n    marginHorizontal: 20,\n\n    borderRadius: 6,\n    borderWidth: 1,\n\n    ...Platform.select({\n      ios: {\n        backgroundColor: theme.colors.transparent,\n        borderColor: theme.dark.main.fg,\n      },\n      android: {\n        backgroundColor: theme.colors.royalBlue,\n        borderColor: theme.colors.transparent,\n      },\n      default: {},\n    }),\n  },\n\n  btnLabel: {\n    fontSize: 21,\n    color: Platform.OS === 'ios' ? theme.colors.royalBlue : theme.dark.main.fg,\n  },\n  header: {\n    alignItems: 'center',\n    marginBottom: 0,\n  },\n  headerTitle: {\n    fontSize: 30,\n    color: theme.dark.main.fg,\n  },\n});\n\nconst INITIAL_STATE = '';\n\nexport const Tut = () => {\n  const { isKeyboardOpen, dispatch } = useContext(appCtx);\n  const [username, setUsername] = useState(INITIAL_STATE);\n  const [password, setPassword] = useState(INITIAL_STATE);\n\n  const hideKeyboard = () => {\n    Keyboard.dismiss();\n  };\n\n  const handleSubmit = () => {\n    hideKeyboard();\n\n    dispatch({ type: actions.username, payload: username });\n    dispatch({ type: actions.password, payload: password });\n    setUsername(INITIAL_STATE);\n    setPassword(INITIAL_STATE);\n  };\n\n  return (\n    <View style={styles.container}>\n      <TouchableWithoutFeedback onPress={hideKeyboard}>\n        <ImageBackground source={IMAGES.tutBgImage} style={styles.image}>\n          <View\n            style={{\n              ...styles.form,\n              marginBottom: isKeyboardOpen ? 0 : 150,\n            }}\n          >\n            <View style={styles.header}>\n              <Text style={styles.headerTitle}>Hello again</Text>\n              <Text style={styles.headerTitle}>Welcome back</Text>\n            </View>\n\n            <View>\n              <Text style={styles.inputTitle}>\n                EMAIL ADDRESS {`${isKeyboardOpen}`}\n              </Text>\n\n              <TextInput\n                value={username}\n                onChangeText={setUsername}\n                keyboardType=\"email-address\"\n                style={styles.input}\n                textAlign=\"center\"\n              />\n            </View>\n\n            <View style={{ marginTop: 20 }}>\n              <Text style={styles.inputTitle}>PASSWORD</Text>\n\n              <TextInput\n                value={password}\n                onChangeText={setPassword}\n                secureTextEntry={true}\n                style={styles.input}\n                textAlign=\"center\"\n              />\n            </View>\n\n            <View>\n              <TouchableOpacity\n                activeOpacity={0.8}\n                style={styles.btn}\n                onPress={handleSubmit}\n              >\n                <Text style={styles.btnLabel}>SIGN IN</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </ImageBackground>\n      </TouchableWithoutFeedback>\n    </View>\n  );\n};\n","import { useReducer } from 'react';\nimport {\n  StyleSheet,\n  Alert,\n  Dimensions,\n  KeyboardAvoidingView,\n  Platform,\n} from 'react-native';\nimport { registerRootComponent } from 'expo';\nimport AppLoading from 'expo-app-loading';\nimport { appReducer, useKeyboardShown, useLoadAssets } from 'hooks';\nimport { actions, theme } from 'common';\nimport { appCtx } from 'context';\nimport { NavBar, My, Tut } from 'components';\n\nconst styles = StyleSheet.create({\n  app: {\n    flex: 1,\n    paddingTop: 40,\n    backgroundColor: theme.dark.main.bg,\n  },\n});\n\nconst {\n  stateNames,\n  selected,\n  username,\n  password,\n  appIsReady,\n  error,\n  isKeyboardOpen,\n} = actions;\n\nconst INITIAL_STATE = Object.freeze({\n  [selected]: stateNames.tutorial,\n  [username]: '',\n  [password]: '',\n  [appIsReady]: false,\n  [error]: false,\n  [stateNames.count]: 0,\n  [isKeyboardOpen]: null,\n});\n\nexport const App = () => {\n  const [state, dispatch] = useReducer(appReducer, INITIAL_STATE);\n  useLoadAssets(dispatch);\n  useKeyboardShown(dispatch);\n\n  if (!state.appIsReady) return <AppLoading />;\n\n  const onLogin = () =>\n    Alert.alert(\n      'Credentials',\n      state.username && state.password\n        ? `${state.username} + ${state.password}`\n        : 'Please enter email and password'\n    );\n\n  const { width, height } = Dimensions.get('window');\n  const isMy = state.selected && state.selected === stateNames.my;\n  const isTut = state.selected && state.selected === stateNames.tutorial;\n\n  const appState = { ...state, dispatch, width, height, onLogin };\n\n  const iOS = Platform.OS === 'ios' ? 'padding' : null;\n\n  return (\n    <KeyboardAvoidingView style={styles.app} behavior={iOS}>\n      <appCtx.Provider value={appState}>\n        <NavBar />\n        {isMy && <My />}\n        {isTut && <Tut />}\n      </appCtx.Provider>\n    </KeyboardAvoidingView>\n  );\n};\n\nregisterRootComponent(App);\n","import { useEffect } from 'react';\nimport { loadFonts } from 'helpers';\nimport { actions } from 'common';\n\nexport const useLoadAssets = dispatch => {\n  useEffect(() => {\n    const cacheResourcesAsync = async () => {\n      try {\n        await loadFonts(); // Pre-load fonts\n      } catch (error) {\n        dispatch({ type: actions.error, payload: error });\n        console.warn(error);\n      } finally {\n        dispatch({ type: actions.appIsReady, payload: true });\n      }\n    };\n\n    cacheResourcesAsync();\n  }, [dispatch]);\n};\n","module.exports = __webpack_public_path__ + \"static/media/logo-react.ef20e673.png\";"],"sourceRoot":""}